plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.goose'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += ['-parameters']
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    //Jackson
    implementation 'com.fasterxml.jackson.module:jackson-module-parameter-names'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    //Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //Redisson
    implementation 'org.redisson:redisson-spring-boot-starter:3.24.0' //분산 락

    // JUnit5 + Testcontainers 지원
    testImplementation 'org.testcontainers:junit-jupiter:1.21.0'

    // Testcontainers의 Redis 모듈
    testImplementation 'org.testcontainers:testcontainers:1.21.0'
    testImplementation 'org.testcontainers:redis:1.21.0'

    // JUnit5
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}